# Config Resources and Ideas:
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# https://github.com/nickjj/dotfiles/blob/master/.tmux.conf
# https://github.com/srydell/dotfiles/blob/master/tmux/.tmux.conf

# ======================================================================
# Basic Configs
# ======================================================================

# Set the delay between prefix and command
set-option -s escape-time 1

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Stop renaming windows automatically
setw -g automatic-rename off

# Automatically renumber windows upon deletion
set-option -g renumber-windows on

# Set default shell
set-option -g default-shell "/usr/bin/zsh"

# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Resize panes immediately for all clients
set-window-option -g aggressive-resize on

# Add a bit more scroll history in the buffer.
set -g history-limit 50000

# Allow Vim's FocusGained to work when your terminal gains focus.
# Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Ensures vim mappings still works inside a tmux session
setw -g xterm-keys on

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# ======================================================================
# Display
# ======================================================================

# Status bar optimized for Gruvbox.
set -g status-style fg=colour244
set -g status-left ''
set -g status-right-length 40
set-window-option -g window-status-current-style fg=colour223,bg=default,bold
set -g pane-border-style fg=default,bg=default
set -g pane-active-border-style bg=default

# Set focused pane border color
set -g pane-active-border-style fg=blue

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Enable color support inside of tmux.
set-option -g default-terminal "xterm-256color"

# Neovim recommended settings
set-option -sg escape-time 10
set-option -sa terminal-overrides ',xterm-256color:RGB'

# ======================================================================
#  Mappings
# ======================================================================

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix 'C-\'

# Use C-a in other programs by using it twice
bind-key 'C-\' send-prefix

# Split pane
bind-key - split-window -v
bind-key '\' split-window -h

# Split panes and do retain the current directory of existing pane
bind-key C-v split-window -h -c "#{pane_current_path}"
bind-key C-h split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Shortcut to synchronize panes toggle
bind-key C-z set-window-option synchronize-panes

# Enable vi keys in copy mode
set-window-option -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# Smart pane switching with awareness of Vim splits.
# True if current pane is running vim

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Pipenv/subshell workaround
# Pipenv workaround: https://gist.github.com/akselsjogren/35aec0af39e53319e12a3e1432da4d4e
# Make sure to add permission to the bash script with 'chmod +x ~/bin/workaround.sh'
# Yet another solution: https://github.com/RobbieClarken/dotfiles/commit/c1a8e28e46e4b0d26f6778e11fec3cea16e526e1
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$' \
   || vim-tmux-navigator-pipenv-workaround.sh #{pane_tty}"


# True if current pane is running fzf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Movement integration between vim and tmux splits
# Move to panes with vim keys as ctrl followed by hjkl
# Relies on vim plugin 'christoomey/vim-tmux-navigator'
bind-key -n M-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind-key -n M-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind-key -n M-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind-key -n M-l run "($is_vim && tmux send-keys C-l) || \
                tmux select-pane -R"

bind-key -n 'M-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Reload config file with r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Paste buffer with P
unbind P
bind-key P paste-buffer

# Switch panes with h, j, k, l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resize panes with HJKL
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Switch window multiple times after only one prefix send (-r option)
bind-key -r n select-window -t :+
bind-key -r p select-window -t :-

# Remap zoom current pane
bind-key C-f resize-pane -Z

# ======================================================================
#  Plugins
# ======================================================================
# Plugin Manager - https://github.com/tmux-plugins/tpm
# In order to use the plugins below you need to install TPM and the plugins.
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# ----------------------------------------------------------------------

## List of plugins.
set -g @tpm_plugins '                   \
    tmux-plugins/tpm                    \
    tmux-plugins/tmux-resurrect         \
    tmux-plugins/tmux-continuum         \
    tmux-plugins/tmux-yank              \
    tmux-plugins/tmux-urlview           \
    tmux-plugins/tmux-open              \
    tmux-plugins/tmux-prefix-highlight  \
    tmux-plugins/tmux-logging           \
    tmux-plugins/tmux-sidebar           \
'

    # tmux-plugins/tmux-fingers           \

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-urlview'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'tmux-plugins/tmux-fingers'
# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'tmux-plugins/tmux-sidebar'

set -g @plugin 'Morantron/tmux-fingers'

# --------------------------------------------------
# Continuum Config
# --------------------------------------------------

# last saved environment is automatically resotored when tmux is started
set -g @continuum-restore 'on'

# --------------------------------------------------
# Open Config
# --------------------------------------------------

set -g @open 'o'
set -g @open-editor 'C-x'
set -g @open-S 'https://www.google.com/search?q='

# --------------------------------------------------
# Prefix Highlight Config
# --------------------------------------------------

# General
set -g @prefix_highlight_output_prefix '< '
set -g @prefix_highlight_output_suffix ' >'
set -g @prefix_highlight_empty_has_affixes 'on' # default is 'off'
set -g @prefix_highlight_empty_prompt 'Tmux'

# Prefix highlight
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_prefix_prompt 'Wait'

# Copy mode highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_copy_prompt 'Copy'

# Adding to statusline
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

# --------------------------------------------------
# Fingers Config
# --------------------------------------------------

# Shift + hint lettter will yank and paste to command line
set -g @fingers-shift-action 'tmux paste-buffer'
# While in Fingers instance, you can use <space> to toggle on/off compact hints
set -g @fingers-compact-hints 0

# --------------------------------------------------
# Yank Config
# --------------------------------------------------

# Remain in copy mode after yanking
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# Mouse yank copies to clipboard
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'

# ======================================================================
# Initialize TPM (keep this line at the very bottom of your tmux.conf).
# ======================================================================
run -b '~/.tmux/plugins/tpm/tpm'
